#!/bin/tcsh -f
# Minimal runscript: run_mom4_iom_static

  set echo
  set platform      = ia64                              # A unique identifier for your platform
  set name          = mom4_iom                          # Name of the experiment
  set npes          = 9                                 # number of processors
  set days          = 2                                 # number of days to run
  set months        = 0                                 # number of months to run
  set root          = $cwd:h:h                          # The directory you created when you checkout
  set code_dir      = $root/src                         # source code directory
  set expdir        = $root/exp/$name                   # directory of the experiment
  set workdir       = $expdir/workdir                   # where the model is run and model output is produced
  set executable    = $expdir/exec/fms_$name.x          # executable created after compilation
  set diagtable     = $expdir/input/diag_table          # path to diagnositics table
  set datatable     = $expdir/input/data_table          # path to the data override table.
  set fieldtable    = $expdir/input/field_table         # path to the field table
  set namelist      = $expdir/input/namelist            # path to namelist file
  set initCond      = $expdir/preprocessing/ocean_temp_salt_ic_levitus.tar  # initial conditions data
  set mppnccombine  = $root/bin/mppnccombine.$platform  # path to executable mppnccombine
  set time_stamp    = $root/bin/time_stamp.csh          # path to cshell to generate the date
  set mkmfTemplate  = $root/bin/mkmf.template.$platform # path to template for your platform
  set mkmf          = $root/bin/mkmf                    # path to executable mkmf
  set pathnames     = $expdir/input/path_names          # path to file containing list of source paths
  set cppDefs       = ( "-Duse_netCDF -Duse_libMPI -DSTATIC_MEMORY -DNI_=150  -DNJ_=150 -DNK_=28 -DNI_LOCAL_=50 -DNJ_LOCAL_=50" )
                                                        # list of cpp #defines to be passed to the source files
							# (DNI_/DNI_LOCAL_) * (DNJ_/DNJ_LOCAL_) should equal to npes
							# need to set layout = (DNI_/-DNI_LOCAL_, DNJ_/-DNJ_LOCAL_) in ocean_model_nml


#--------------------------------------------------------------------------------------------------------
# compile mppnccombine.c, needed only if $npes > 1
  if ( $npes > 1 && ! -f $mppnccombine ) then
    cc -O -o $mppnccombine -I/usr/local/include -L/usr/local/lib $code_dir/postprocessing/mppnccombine.c -lnetcdf
  endif

#--------------------------------------------------------------------------------------------------------
# setup directory structure
  if ( ! -d $executable:h )    mkdir  $executable:h
  if ( ! -d $workdir )         mkdir  $workdir
  if ( ! -d $workdir/INPUT )   mkdir  $workdir/INPUT
  if ( ! -d $workdir/RESTART ) mkdir  $workdir/RESTART
#--------------------------------------------------------------------------------------------------------
# If executable does not exist,   compile the model code and create executable 
  if (! -f $executable) then
    cd $executable:h
    $mkmf -a $code_dir -t $mkmfTemplate -p $executable:t -c "$cppDefs" $pathnames $root/include $code_dir/shared/mpp/include /usr/local/include
    make $executable:t
  endif
#--------------------------------------------------------------------------------------------------------
# get data sets, input data and executable
  cd $workdir
  cat > input.nml <<EOF
  &ocean_solo_nml
     months = $months
     days   = $days
     date_init = 1,1,1,0,0,0
     hours = 0
     minutes = 0
     seconds = 0
     calendar = 'JULIAN'
     dt_cpld  = 86400
     dt_ocean = 7200 /
EOF
  cat $namelist >> input.nml
  cp $datatable  data_table
  cp $diagtable  diag_table
  cp $fieldtable field_table
  
  cd INPUT
  
  cp $expdir/preprocessing/grid_spec_v1.nc            grid_spec.nc
  cp $expdir/preprocessing/ssmi.nc                    tau.nc  
  cp $expdir/preprocessing/net_prate.nc               .
  cp $expdir/preprocessing/hflux_minus_sw.nc          .
  cp $expdir/preprocessing/nswrs.nc                   .
  cp $expdir/preprocessing/salt_sfc_restore.nc        .
  cp $expdir/preprocessing/temp_sfc_restore.nc        .
  cp $expdir/preprocessing/chloryphll.nc              chl.nc
  cp $expdir/preprocessing/sponge_coeff.nc            .
  cp $expdir/preprocessing/ocean_temp_salt_levitus.nc .

  cp $initCond $initCond:t
  tar -xvf $initCond:t
  rm -f $initCond:t
# some csh commands for this experiment
         ln -s ocean_temp_salt_levitus.nc temp_sponge.nc
	 ln -s ocean_temp_salt_levitus.nc salt_sponge.nc
	 ln -s sponge_coeff.nc temp_sponge_coeff.nc
	 ln -s sponge_coeff.nc salt_sponge_coeff.nc
  cd $workdir
  cp $executable $executable:t

#----------------------------------------------------------------------------------------------
# run the model

  if($npes > 1) then
     mpirun -np $npes $executable:t > fms.out
  else
     $executable:t > fms.out
  endif
  
  cat fms.out


#----------------------------------------------------------------------------------------------
# generate date for file names ---
    set begindate = `$time_stamp -bf digital`
    if ( $begindate == "" ) set begindate = tmp`date '+%j%H%M%S'`
    set enddate = `$time_stamp -ef digital`
    if ( $enddate == "" ) set enddate = tmp`date '+%j%H%M%S'`
    if ( -f time_stamp.out ) rm -f time_stamp.out
#----------------------------------------------------------------------------------------------
# get a tar restart file 
  cd RESTART
  set resfiles = `ls *.res *.nc`
  if ( $#resfiles > 0 ) then
     cp $workdir/input.nml .
     cp $workdir/*_table .
     set files = ( $resfiles input.nml *_table )
     tar -cf $enddate.tar $files
     rm -f $files
  endif

  cd $workdir

#----------------------------------------------------------------------------------------------
# rename ascii files with the date
  foreach out (`ls *.out`)
     mv $out $begindate.$out
  end

#----------------------------------------------------------------------------------------------
# combine netcdf files
  if ( $npes > 1 ) then
     foreach ncfile (`/bin/ls *.nc.0000`)
        $mppnccombine $ncfile:r
	rm $ncfile:r.????
     end
  endif   

#----------------------------------------------------------------------------------------------
# rename nc files with the date
  foreach ncfile (`/bin/ls *.nc`)
     mv $ncfile $begindate.$ncfile
  end

  set files = `ls $begindate.*.nc`
  if ( $#files > 0 ) then
      tar -cf $begindate.nc.tar $files
      rm -f $files
  endif

  unset echo

















