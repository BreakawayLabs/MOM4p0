#!/bin/tcsh -f
# Minimal runscript: mom4_test3B

  set echo
  set platform      = sgi                               # A unique identifier for your platform
  set name          = test3B                            # Name of the experiment
  set npes          = 20                                # number of processors
  set days          = 2                                 # number of days to run
  set months        = 0                                 # number of months to run
  set root          = $cwd:h:h                          # The directory you created when you checkout
  set code_dir      = $root/src                         # source code directory
  set expdir        = $root/exp/$name                   # directory of the experiment
  set workdir       = $expdir/workdir                   # where the model is run and model output is produced
  set executable    = $expdir/exec/fms_$name.x          # executable created after compilation
  set diagtable     = $expdir/input/diag_table          # path to diagnositics table
  set datatable     = $expdir/input/data_table          # path to the data override table.
  set fieldtable    = $expdir/input/field_table         # path to the field table
  set namelist      = $expdir/input/namelist            # path to namelist file
  set mppnccombine  = $root/bin/mppnccombine.$platform  # path to executable mppnccombine
  set time_stamp    = $root/bin/time_stamp.csh          # path to cshell to generate the date
  set mkmfTemplate  = $root/bin/mkmf.template.$platform # path to template for your platform
  set mkmf          = $root/bin/mkmf                    # path to executable mkmf
  set pathnames     = $expdir/input/path_names          # path to file containing list of source paths
  set cppDefs       = ( "-Duse_netCDF -Duse_libMPI" )   # list of cpp #defines to be passed to the source files
  if($npes == 1) set cppDefs  = ( "-Duse_netCDF" )  

#--------------------------------------------------------------------------------------------------------
# compile mppnccombine.c, needed only if $npes > 1
  if ( $npes > 1 && ! -f $mppnccombine ) then
    cc -O -o $mppnccombine -I/usr/local/include -L/usr/local/lib $code_dir/postprocessing/mppnccombine.c -lnetcdf
  endif

#--------------------------------------------------------------------------------------------------------
# setup directory structure
  if ( ! -d $executable:h )    mkdir  $executable:h
  if ( ! -d $workdir )         mkdir  $workdir
  if ( ! -d $workdir/INPUT )   mkdir  $workdir/INPUT
  if ( ! -d $workdir/RESTART ) mkdir  $workdir/RESTART
#--------------------------------------------------------------------------------------------------------
# compile the model code and create executable
  cd $executable:h
  $mkmf -f -a $code_dir -t $mkmfTemplate -p $executable:t -c "$cppDefs" $pathnames $root/include $code_dir/shared/mpp/include /usr/local/include

  make -f Makefile

#--------------------------------------------------------------------------------------------------------
# get data sets, input data and executable
  cd $workdir

  cat > input.nml <<EOF
   &ocean_solo_nml
            months = $months
            days   = $days
            date_init = 1980,1,1,0,0,0
            hours = 0
            minutes = 0
            seconds = 0
            calendar = 'julian'
	    dt_cpld  = 7200
	    dt_ocean = 600 /
EOF
  cat $namelist >> input.nml

  cp $datatable  data_table
  cp $diagtable  diag_table
  cp $fieldtable field_table
  
  cd INPUT
  
  cp $expdir/preprocessing/grid_spec.nc          .
  cp $expdir/preprocessing/tau.nc                .
  cp $expdir/preprocessing/eta_t_ic.nc           .

  cp $expdir/preprocessing/ocean_tracers_ic.tar  .
  tar -xvf ocean_tracers_ic.tar
  rm -f ocean_tracers_ic.tar

  cd $workdir
  cp $executable $executable:t

#----------------------------------------------------------------------------------------------
# run the model

  if($npes > 1) then
     mpirun -np $npes $executable:t > fms.out
  else
     $executable:t > fms.out
  endif
  
  cat fms.out

# For diag_manager regional output postprocessing
  set item_previous = ""
  set region_files = `ls rregion*`
  foreach item ( $region_files )
    if ( $item:r != $item_previous:r ) then
     set input_files = ( `ls $item:r.*` )
     if ( $#input_files > 0 ) then
     set output_file
     set output_file = ( $output_file  `echo $item:r | sed "s/^rregion//"` )
     mppnccombine $output_file $input_files
     rm $input_files
     endif
    else
     continue
    endif
    set item_previous = $item
  end
#----------------------------------------------------------------------------------------------
# generate date for file names ---
    set begindate = `$time_stamp -bf digital`
    if ( $begindate == "" ) set begindate = tmp`date '+%j%H%M%S'`
    set enddate = `$time_stamp -ef digital`
    if ( $enddate == "" ) set enddate = tmp`date '+%j%H%M%S'`
    if ( -f time_stamp.out ) rm -f time_stamp.out
#----------------------------------------------------------------------------------------------
# get a tar restart file 
  cd RESTART
  set resfiles = `ls *.res *.nc`
  if ( $#resfiles > 0 ) then
     cp $workdir/input.nml .
     cp $workdir/*_table .
     set files = ( $resfiles input.nml *_table )
     tar -cf $enddate.tar $files
     rm -f $files
  endif

  cd $workdir

#----------------------------------------------------------------------------------------------
# rename ascii files with the date
  foreach out (`ls *.out`)
     mv $out $begindate.$out
  end

#----------------------------------------------------------------------------------------------
# combine netcdf files
  if ( $npes > 1 ) then
     foreach ncfile (`/bin/ls *.nc.0000`)
        $mppnccombine $ncfile:r
	rm $ncfile:r.????
     end
  endif   

#----------------------------------------------------------------------------------------------
# rename nc files with the date
  foreach ncfile (`/bin/ls *.nc`)
     mv $ncfile $begindate.$ncfile
  end

  set files = `ls $begindate.*.nc`
  if ( $#files > 0 ) then
      tar -cf $begindate.nc.tar $files
      rm -f $files
  endif

  unset echo

















